:root {
    --dark-blue: hsl(209, 23%, 22%);
    --dark-gray: hsl(0, 0%, 52%);
    --very-light-gray: hsl(0, 0%, 95%);
    --white: hsl(0, 0%, 100%);
}
html {
    --elements: var(--white);
    --background: var(--very-light-gray);
    --input: var(--dark-gray);
    --input-focus: hsl(0, 0%, 95%);
    --text: hsl(200, 15%, 8%);
    --border-radius: 6px;
    --box-shadow: 0px 2px 6px #00000033;
}
main::-webkit-scrollbar {
    --scrollbar-width: 12px;
    width: var(--scrollbar-width);
}
main::-webkit-scrollbar-thumb {
    border-radius: 12px;
    background-color: hsl(0, 0%, 80%);
}
main::-webkit-scrollbar-track {
    border-radius: 12px;
    background-color: hsl(0, 0%, 90%);
}
@media (prefers-color-scheme: dark) {
    html {
        --elements: var(--dark-blue);
        --background: hsl(207, 26%, 17%);
        --input: var(--very-light-gray);
        --text: var(--white);
        --input-focus: hsl(209, 23%, 27%);
    }
    main::-webkit-scrollbar-thumb {
        background-color: hsl(210deg 32.34% 25.82%);
    }
    main::-webkit-scrollbar-track {
        background-color: hsl(210deg 45.27% 14.63%);
    }
}
body {
    color: var(--text);
    background-color: var(--background);
    height: 100vh;
    display: flex;
    flex-direction: column;
    font-family: 'Nunito Sans', sans-serif;
}
@media only screen and (width<=610px) {
    body {
        height: 100dvh;
    }
}

* {
    box-sizing: border-box;
    margin: 0px;
}
main {
    width: 100%;
    padding: 20px 32px;
    display: flex;
    flex-direction: column;
    gap: 24px;
    overflow-y: auto;
    flex-grow: 1;
    position: relative;
    scroll-behavior: smooth;
}

svg {
    min-width: 24px;
    width: 24px;
    height: 24px;
    fill: var(--input);
}
.search {
    background-color: var(--elements);
    display: flex;
    border-radius: var(--border-radius);
    padding: 8px 16px;
    gap: 8px;
    box-shadow: var(--box-shadow);
    overflow: hidden;
    align-items: center;
    width: 300px;
    will-change: width;
    transition: width 0.8s;
}
.retract-width {
    transition: width 0.4s;
    width: 56px !important;
}
.search:has(:focus-within, :active) {
    width: 300px !important;
}
.search label {
    cursor: pointer;
    height: 24px;
}
.search input::placeholder {
    color: currentColor;
}
.search input {
    color: var(--input);
    background-color: transparent;
    outline: none;
    border: none;
    width: calc(100% - 32px);
}
.region {
    color: var(--input);
    background-color: var(--elements);
    border: none;
    padding: 12px 16px;
    box-shadow: var(--box-shadow);
    display: flex;
    align-items: center;
    gap: 8px;
    border-radius: var(--border-radius);
    cursor: pointer;
    user-select: none;
    position: relative;
    overflow: hidden;
    width: 210px;
    transition: width 0.8s;
    will-change: width;
}
.region :not(input) {
    z-index: 2;
}
.region svg ~ :where(svg, input, label) {
    transition: opacity 0.4s;
    will-change: opacity;
}
.region.retract-width svg ~ :where(svg, input, label) {
    opacity: 0 !important;
}
.region label {
    cursor: pointer;
    will-change: transform, opacity;
    transition: transform 0.4s, opacity 0.4s;
    white-space: nowrap;
}
.region .expand-more {
    will-change: rotate, opacity;
    transition: rotate 0.4s, opacity 0.4s;
}
.rotate180 {
    rotate: 180deg;
}
.region input {
    position: absolute;
    opacity: 0;
    width: 55%;
    left: 50%;
    top: 45%;
    transform: translateX(-50%);
    background-color: transparent;
    border: none;
    color: var(--input);
}
.region:has(input.appear) label {
    transform: translate(-22px, -10px) scale(0.6);
}
#region-dropdown {
    z-index: 2;
    position: absolute;
    width: 210px;
    border: none;
    display: block;
    opacity: 0;
    padding-inline: 0px;
    transition: opacity 0.4s;
    background-color: var(--elements);
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    pointer-events: none;
    cursor: none;
}
#region-dropdown[open] {
    opacity: 1;
    cursor: pointer;
    pointer-events: all;
}
#region-dropdown ul {
    list-style-type: none;
    padding: 4px 0px;
    display: flex;
    flex-direction: column;
    gap: 4px;
}
#region-dropdown li {
    will-change: background-color;
    transition: background-color 0.4s;
    padding: 6px 24px;
    color: var(--input);
}
#region-dropdown li:hover {
    background-color: var(--input-focus);
}
.appbar {
    position: sticky;
    top: 0px;
    display: flex;
    width: 100%;
    justify-content: space-between;
    gap: 8px;
    flex-wrap: wrap;
    z-index: 2;
    opacity: 0;
    will-change: opacity;
    animation: appbar-animation 0.4s 0.2s forwards;
    padding-inline: 4px;
}
@keyframes appbar-animation {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@media only screen and (width<=610px) {
    .search {
        width: 100%;
    }
    .search:has(:focus-within, :active) {
        width: 100% !important;
    }
}
.countries {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    grid-gap: 32px;
    padding-right: var(--scrollbar-width);
}
.country:focus {
    outline: none;
}
.country {
    background-color: var(--elements);
    box-shadow: var(--box-shadow);
    border-radius: var(--border-radius);
    display: flex;
    flex-direction: column;
    gap: 6px;
    color: unset;
    text-decoration: none;
    overflow: hidden;
    position: relative;
    height: 100%;
}

.country-name {
    font-weight: 800;
    font-size: 1.05rem;
}
.country label {
    cursor: pointer;
    font-weight: 600;
}
.country label + span {
    font-weight: 300;
}
.country img {
    height: 160px;
    width: 100%;
}
.country :where(.country-details, .country-name) {
    padding: 8px 20px;
}
.country .country-details {
    font-style: normal;
    font-size: 0.9rem;
    padding-bottom: 24px;
}
.country .country-details span {
    color: var(--input);
}
.country-card-border {
    padding: 4px;
    border-radius: var(--border-radius);
    overflow: hidden;
    position: relative;
    max-width: 300px;
    min-width: 240px;
    background-color: transparent;
}
.country-card-border:has(:hover, :focus) .animated-border {
    animation-play-state: running;
    opacity: 1;
}
/* TODO should i make the card also a tiny bit transparent */
.country-card-border:hover .country {
    opacity: 1;
    backdrop-filter: blur(1px);
}
@media only screen and (width <=610px) {
    .country-card-border {
        width: 70%;
        justify-self: center;
        max-width: initial;
    }
}
@media only screen and (width <=550px) {
    .country-card-border {
        width: 90%;
    }
}
@media only screen and (width <=480px) {
    .country-card-border {
        width: 100%;
    }
}
@keyframes rotate {
    from {
        rotate: 0deg;
    }
    to {
        rotate: 360deg;
    }
}
.animated-border {
    position: absolute;
    z-index: -1;
    scale: 1.6;
    opacity: 0;
    border-radius: var(--border-radius);
    inset: 0px;
    height: 100%;
    width: 100%;
    transition-duration: 0.4s;
    will-change: rotate, opacity;
    transition: opacity 0.4s;
    animation: rotate 4s infinite linear paused;
}
body > header {
    background-color: var(--elements);
    padding: 12px 32px;
    box-shadow: var(--box-shadow);
    z-index: 6;
}
header h2 {
    font-weight: 800;
}
.go-to-top {
    position: fixed;
    right: 24px;
    bottom: 24px;
    background-color: var(--elements);
    color: var(--text);
    border-radius: 50%;
    aspect-ratio: 1/1;
    padding: 12px;
    border: none;
    box-shadow: var(--box-shadow);
    cursor: pointer;
    will-change: transform, scale, opacity;
    transition: translate 0.8s, scale 0.4s, opacity 0.4s;
    translate: 0px 200%;
    opacity: 0.75;
    z-index: 5;
}
.go-to-top:hover {
    opacity: 1;
    scale: 1.2;
}
.appear {
    opacity: 1 !important;
}
.fade {
    opacity: 0 !important;
}
.show {
    translate: none;
}
.card {
    border-radius: var(--border-radius);
    color: var(--input);
    background-color: var(--elements);
    box-shadow: var(--box-shadow);
    padding: 4px 24px;
}
.back-button {
    display: flex;
    align-items: center;
    border: none;
    gap: 8px;
    cursor: pointer;
    text-decoration: none;
    width: max-content;
    padding-block: 8px;
    height: 48px;
    will-change: opacity;
    transition: opacity 0.3s;
}
.back-button:where(:hover) {
    opacity: 0.65;
}
.single-country {
    position: fixed;
    z-index: 5;
    inset: 0px;
    background-color: var(--background);
    display: flex;
    flex-direction: column;
    gap: 56px;
    padding: 76px 36px 24px 36px;
    transition: opacity 1.2s;
    will-change: opacity;
}
.single-country .content {
    display: flex;
    width: 100%;
    height: 360px;
    gap: 176px;
    align-items: stretch;
}
.single-country .country-flag {
    height: 100%;
}
.single-country .country-flag img {
    border-radius: var(--border-radius);
    box-shadow: 0px 2px 9px #00000066;
    height: calc(1.7 * 14vw);
    max-height: 100%;
    will-change: transform;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

@keyframes country-flag-animation {
    to {
        transform: translate(0px, 0px);
    }
}
.single-country .country-details {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    overflow: visible;
    flex-grow: 1;
    padding-block: 16px;
    gap: 8px;
}
.single-country .country-specifics {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    max-height: 70%;
    font-style: normal;
    gap: 8px;
    align-content: flex-start;
}
.single-country .country-specific {
    display: flex;
    gap: 6px;
    width: max-content;
}
.single-country .country-specific label {
    color: var(--text);
    font-weight: 600;
}
.single-country .country-specific label + span {
    color: var(--input);
}
.single-country .country-name {
    font-size: 24px;
}
.single-country .border-countries {
    display: flex;
    gap: 8px;
    align-items: center;
    flex-wrap: wrap;
}
.single-country .border-country {
    text-decoration: none;
}
.single-country .country-map {
    flex-grow: 1;
    animation: fadeIn 1s 1s;
    border-radius: var(--border-radius);
}
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@media only screen and (width<= 1260px) {
    .single-country .content {
        gap: 24px;
        justify-content: space-between;
    }
    .single-country {
        overflow: auto;
    }
}
@media only screen and (width<= 980px) {
    .single-country {
        gap: 24px;
    }
    .single-country .content {
        flex-direction: column;
        height: auto;
    }
    .single-country .country-flag {
        height: auto;
    }
}
@media only screen and (width<= 600px) {
    .single-country .country-specifics {
        flex-wrap: nowrap;
        padding-bottom: 12px;
    }
}
@media (prefers-reduced-motion: reduce) {
    .single-country .country-flag img {
        animation: none !important;
    }
    .country-card-border {
        overflow: visible;
    }
    .country-card-border .country {
        will-change: transform;
        transition: transform 0.4s;
    }
    .country:focus {
        outline: initial;
    }
    .country-card-border:has(:hover, :focus) .animated-border {
        animation: none;
        opacity: 0;
    }
    .country-card-border:hover .country {
        transform: scale(1.1);
    }
}
